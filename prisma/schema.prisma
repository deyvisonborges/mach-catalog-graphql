generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProductType {
  id        String    @id @default(uuid())
  name      String
  active    Boolean?  @default(false)
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  Product   Product[]

  @@map("products_types")
}

model Product {
  id               String            @id @default(uuid())
  name             String
  description      String
  sku              String
  salePrice        Float             @map("sale_price")
  costPrice        Float             @map("cost_price")
  promotionalPrice Float             @map("promotional_price")
  thumbnail        String
  productTypeId    String            @map("product_type_id")
  active           Boolean?          @default(false)
  createdAt        DateTime?         @default(now()) @map("created_at")
  updatedAt        DateTime?         @updatedAt @map("updated_at")
  productType      ProductType       @relation(fields: [productTypeId], references: [id])
  ProductCategory  ProductCategory[]
  simpleProduct    SimpleProduct[]
  virtualProduct   VirtualProduct[]

  @@map("products")
}

model SimpleProduct {
  id        String    @id @default(uuid())
  size      String
  weight    Int
  material  String
  productId String    @map("product_id")
  active    Boolean?  @default(false)
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  product   Product   @relation(fields: [productId], references: [id])

  @@map("products_simple")
}

model VirtualProduct {
  id           String    @id @default(uuid())
  downloadLink String    @map("download_link")
  productId    String    @map("product_id")
  active       Boolean?  @default(false)
  createdAt    DateTime? @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")
  product      Product   @relation(fields: [productId], references: [id])

  @@map("products_virtual")
}

model Category {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime?         @default(now()) @map("created_at")
  updatedAt       DateTime?         @updatedAt @map("updated_at")
  active          Boolean?          @default(false)
  name            String
  description     String
  ProductCategory ProductCategory[]

  @@map("categories")
}

model ProductCategory {
  id         String   @id @default(uuid())
  productId  String
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])

  @@map("products_categories")
}
